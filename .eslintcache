[{"C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\Header\\Header.js":"3","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\UI\\HamburgerIcon\\HamburgerIcon.js":"4","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\UI\\SideDrawer\\SideDrawer.js":"5","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\Home\\Home.js":"6","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\About\\About.js":"7","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\Contact\\Contact.js":"8","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\Projects\\Projects.js":"9","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\UI\\Avatar\\Avatar.js":"10","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\sanityClient.js":"11","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\Projects\\Project\\Project.js":"12","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\SelectedProject\\SelectedProject.js":"13","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\UI\\Spinner\\Spinner.js":"14"},{"size":313,"mtime":1610067576569,"results":"15","hashOfConfig":"16"},{"size":1182,"mtime":1611236353584,"results":"17","hashOfConfig":"16"},{"size":1585,"mtime":1610496778576,"results":"18","hashOfConfig":"16"},{"size":402,"mtime":1610332354611,"results":"19","hashOfConfig":"16"},{"size":628,"mtime":1610409488807,"results":"20","hashOfConfig":"16"},{"size":619,"mtime":1610760739223,"results":"21","hashOfConfig":"16"},{"size":3018,"mtime":1611744724336,"results":"22","hashOfConfig":"16"},{"size":2685,"mtime":1611744652771,"results":"23","hashOfConfig":"16"},{"size":2232,"mtime":1611348039855,"results":"24","hashOfConfig":"16"},{"size":219,"mtime":1610497752469,"results":"25","hashOfConfig":"16"},{"size":135,"mtime":1611109064016,"results":"26","hashOfConfig":"16"},{"size":524,"mtime":1611348036325,"results":"27","hashOfConfig":"16"},{"size":3412,"mtime":1611972256473,"results":"28","hashOfConfig":"16"},{"size":227,"mtime":1611268672117,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1sl9ju1",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\index.js",[],["62","63"],"C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\App.js",[],"C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\Header\\Header.js",[],"C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\UI\\HamburgerIcon\\HamburgerIcon.js",[],"C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\UI\\SideDrawer\\SideDrawer.js",["64","65"],"import React from \"react\";\r\nimport classes from \"./SideDrawer.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction SideDrawer(props){\r\n    return(\r\n        <div id=\"mySidenav\" className={`${classes.sidenav} ${props.show && classes.toggleSideDrawer}`} onClick={props.clicked}>\r\n            <a href=\"javascript:void(0)\" className={classes.closebtn} onClick={props.clicked}>&times;</a>\r\n            <NavLink to=\"/my-works\">My Works</NavLink>\r\n            <NavLink to=\"/about-me\">About me</NavLink>\r\n            <NavLink to=\"/contact-me\">Contact me</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideDrawer;","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\Home\\Home.js",[],"C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\About\\About.js",[],"C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\Contact\\Contact.js",[],"C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\Projects\\Projects.js",["66"],"import React, { useState, useEffect } from \"react\";\r\nimport sanityClient from \"../../sanityClient.js\";\r\nimport classes from \"./Projects.module.css\";\r\nimport Project from \"./Project/Project\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Projects(){\r\n    const [allProjects, setAllProjects] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        document.title = \"My Works | John Evans Dakurah\";\r\n        sanityClient\r\n            .fetch(`*[_type == \"post\"]{\r\n                title,\r\n                projectType,\r\n                builtWith,\r\n                duration,\r\n                date,\r\n                github,\r\n                hostedUrl,\r\n                slug,\r\n                mainImage{\r\n                    asset->{\r\n                        _id,\r\n                        url\r\n                    },\r\n                    alt\r\n                }\r\n            }`)\r\n            .then((data) => {\r\n                setAllProjects(data)\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                setError(error);\r\n            });\r\n    }, []);\r\n\r\n    let projects = (\r\n        <div className={classes.Spinner}>\r\n            <Spinner />\r\n        </div>\r\n    );\r\n\r\n    if(allProjects){\r\n        projects = (\r\n            <div className={classes.Projects}>\r\n                {allProjects.map(project => {\r\n                    return(\r\n                        <NavLink to={\"/my-works/\" + project.slug.current} key={project.title}>\r\n                            <Project \r\n                                destination={\"/my-works/\" + project.slug.current}\r\n                                image={project.mainImage.asset.url}\r\n                                title={project.title}\r\n                        />\r\n                        </NavLink>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            <h1 className={classes.Header}>My Works</h1>\r\n            <h2 className={classes.Header2}>Some amazing projects I've created!</h2>\r\n            {projects}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Projects;","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\UI\\Avatar\\Avatar.js",[],"C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\sanityClient.js",[],"C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\Projects\\Project\\Project.js",[],"C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\SelectedProject\\SelectedProject.js",["67","68","69"],"import React, { useState, useEffect } from \"react\";\r\nimport sanityClient from \"../../sanityClient\";\r\nimport imageUrlBuilder from \"@sanity/image-url\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport classes from \"./SelectedProject.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nfunction SelectedProject(){\r\n    const [selectedProject, setSelectedProject] = useState(null);\r\n    const { slug } = useParams();\r\n\r\n    const builder = imageUrlBuilder(sanityClient);\r\n    function urlFor(source){\r\n        return builder.image(source)\r\n    }\r\n\r\n    useEffect(() => {\r\n        sanityClient.fetch(`*[slug.current == \"${slug}\"]{\r\n            title,\r\n            projectType,\r\n            builtWith,\r\n            duration,\r\n            date,\r\n            github,\r\n            hostedUrl,\r\n            _id,\r\n            slug,\r\n            mainImage{\r\n                asset->{\r\n                    _id,\r\n                    url\r\n                }\r\n            },\r\n            body,\r\n            \"name\": author->name,\r\n            \"authorImage\": author->image\r\n        }`)\r\n        .then((data) => {\r\n            setSelectedProject(data[0])\r\n            console.log(data)\r\n        })\r\n        .catch(error => console.log(error))\r\n    }, []);\r\n\r\n    let selectProject = (<h1></h1>);\r\n    if(selectedProject){\r\n        selectProject = (\r\n            <div className={classes.SelectedProject}>\r\n                <div className={classes.Background}>\r\n                    <div className={classes.Header}>\r\n                        <h1>{selectedProject.title}</h1>\r\n                        <p><em>Finished on {selectedProject.date}</em></p>\r\n                    </div>\r\n                    <div className={classes.About}>\r\n                        <p>{selectedProject.body[0].children[0].text}</p>\r\n                    </div>\r\n                    <div className={classes.Image}>\r\n                        <img src={selectedProject.mainImage.asset.url} alt=\"Covid-19 tracker\"/>\r\n                    </div>\r\n                    <div className={classes.Body}>\r\n                        <div className={classes.ProjectType}>\r\n                            <h3>Project Type</h3>\r\n                            <ul>\r\n                                <li> - {selectedProject.projectType}</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className={classes.BuiltWith}>\r\n                            <h3>Built With</h3>\r\n                            <ul>\r\n                                <li> - {selectedProject.builtWith}</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className={classes.UsefulLinks}>\r\n                            <h3>Useful Links</h3>\r\n                            <ul>\r\n                                {selectedProject.github ? <li> - View code on <a href={selectedProject.github}>Github</a></li> : null}\r\n                                {selectProject.hostedUrl ? <li> - View hosted project <a href={selectProject.hostedUrl}>Here</a></li> : null}\r\n                            </ul>\r\n                        </div>\r\n                        <p className={classes.GoBackLink}>Go back all projects? Click <NavLink to=\"/my-works\">Here!</NavLink></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } \r\n\r\n    return selectProject;\r\n}\r\n\r\nexport default SelectedProject;","C:\\Users\\user\\Desktop\\Portfolio\\React Projects\\Apps\\my-website\\src\\Components\\UI\\Spinner\\Spinner.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":8,"column":13,"nodeType":"76","endLine":8,"endColumn":95},{"ruleId":"77","severity":1,"message":"78","line":8,"column":21,"nodeType":"79","messageId":"80","endLine":8,"endColumn":41},{"ruleId":"81","severity":1,"message":"82","line":10,"column":12,"nodeType":"83","messageId":"84","endLine":10,"endColumn":17},{"ruleId":"81","severity":1,"message":"85","line":14,"column":14,"nodeType":"83","messageId":"84","endLine":14,"endColumn":20},{"ruleId":"86","severity":1,"message":"87","line":44,"column":8,"nodeType":"88","endLine":44,"endColumn":10,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":46,"column":26,"nodeType":"76","endLine":46,"endColumn":30},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'urlFor' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.","ArrayExpression",["94"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [slug]",{"range":"97","text":"98"},[1246,1248],"[slug]"]